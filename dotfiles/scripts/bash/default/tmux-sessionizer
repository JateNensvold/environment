#!/usr/bin/env bash

if [[ $# -eq 0 ]]; then
	# load TMUX_SESSIONIZER_PATHS into a new array as ZSH arrays are exported from ZSH -> BASH as strings
	real_paths=()
	read -ra TMUX_PATHS <<<"$TMUX_SESSIONIZER_PATHS"

	for raw_tmux_sessionizer_var in "${TMUX_PATHS[@]}"; do
		tmp_var=$(echo "${raw_tmux_sessionizer_var}" | tr ':' '\n')

		tmux_sessionizer_vars=()
		mapfile -t tmux_sessionizer_vars <<<"$tmp_var"

		raw_tmux_sessionizer_path=${tmux_sessionizer_vars[0]}
		tmux_sessionizer_depth=${tmux_sessionizer_vars[1]}

		# expand sessionizer path
		tmp_path="${raw_tmux_sessionizer_path/#\~/$HOME}"

		if [[ "${tmp_path: -1}" != "/" ]]; then
			tmp_path="${tmp_path}/"
		fi
		_out=$(realpath -e -q "${tmp_path}")
		code=$?

		if [[ $code -eq 0 ]]; then
			# TODO: Run fd in parallel
			tmp_var=$(fd . "${tmp_path}" -H --min-depth=1 --max-depth="${tmux_sessionizer_depth:-2}" --type=directory)
			mapfile -t -O "${#real_paths[@]}" real_paths <<<"$tmp_var"
		fi
	done

	selected=$(printf "%s\n" "${real_paths[@]}" | fzf)
else
	selected=$1
fi

if [[ -z $selected ]]; then
	exit 2
fi

selected_name=$(basename "$selected" | tr . _)

tmux_running=$(pgrep tmux)

# create TMUX session if its not running
if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
	tmux new-session -s "$selected_name" -c "$selected" -e TMUX_SESSION_PATH="$selected"
	exit 1
fi

# create new background session if tmux is already running
if ! tmux has-session -t="$selected_name" 2>/dev/null; then
	tmux new-session -ds "$selected_name" -c "$selected" -e TMUX_SESSION_PATH="$selected"
fi

if [[ -z $TMUX ]]; then
	# Not in tmux, attach to session
	tmux attach -t "$selected_name"
	exit 1
else
	# In tmux, switch to other session
	tmux switch-client -t "$selected_name"
fi
